# Recording Rules para Demonstração COMPLETA de Tolerância a Falhas
# Inclui todas as métricas solicitadas: pods ativos, CPU, estado dos pods, HPA
groups:
  - name: patocash_metricas_tempo_real
    interval: 5s
    rules:
      # 1. NÚMERO DE PODS ATIVOS
      - record: patocash:backend_pod_count
        expr: count(count by (pod) (container_cpu_usage_seconds_total{pod=~"patocast-backend.*", container!="POD"}))
        labels:
          metric_type: "pod_count"
          demo: "auto-healing"
          
      # 2. USO DE CPU POR POD
      - record: patocash:backend_cpu_percent_per_pod
        expr: sum by (pod, namespace) (rate(container_cpu_usage_seconds_total{pod=~"patocast-backend.*", container!="POD"}[1m])) * 100
        labels:
          metric_type: "cpu_usage"
          demo: "hpa-cpu"
          
      # 3. USO DE CPU TOTAL
      - record: patocash:backend_total_cpu_percent
        expr: sum(patocash:backend_cpu_percent_per_pod)
        labels:
          metric_type: "cpu_total"
          demo: "hpa-cpu"

      # 4. ESTADO DOS PODS (Running, Failed, Pending)
      - record: patocash:backend_pods_running
        expr: count(kube_pod_status_phase{pod=~"patocast-backend.*", phase="Running"})
        labels:
          metric_type: "pod_status"
          phase: "running"
          
      - record: patocash:backend_pods_pending
        expr: count(kube_pod_status_phase{pod=~"patocast-backend.*", phase="Pending"})
        labels:
          metric_type: "pod_status"
          phase: "pending"
          
      - record: patocash:backend_pods_failed
        expr: count(kube_pod_status_phase{pod=~"patocast-backend.*", phase="Failed"})
        labels:
          metric_type: "pod_status"
          phase: "failed"

      # 5. AÇÕES DO HPA (scaling)
      - record: patocash:hpa_current_replicas
        expr: kube_horizontalpodautoscaler_status_current_replicas{horizontalpodautoscaler="patocast-backend-hpa"}
        labels:
          metric_type: "hpa_scaling"
          demo: "hpa-scaling"
          
      - record: patocash:hpa_desired_replicas
        expr: kube_horizontalpodautoscaler_status_desired_replicas{horizontalpodautoscaler="patocast-backend-hpa"}
        labels:
          metric_type: "hpa_scaling"
          demo: "hpa-scaling"
          
      # 6. HISTÓRICO DE ESCALONAMENTO (quando HPA age)
      - record: patocash:hpa_scaling_active
        expr: (patocash:hpa_desired_replicas > patocash:hpa_current_replicas) or (patocash:hpa_current_replicas > 2)
        labels:
          metric_type: "hpa_action"
          demo: "hpa-scaling"