# üöÄ Script de Deploy Seguro - PatoCash Kubernetes
# Este script usa vari√°veis do .env de forma segura (Nova estrutura organizada)

Write-Host "üöÄ INICIANDO DEPLOY SEGURO PATOCASH" -ForegroundColor Green
Write-Host "=" * 50

# Navegar para a raiz do projeto (2 n√≠veis acima)
$projectRoot = Split-Path -Parent (Split-Path -Parent $PSScriptRoot)
Set-Location $projectRoot
Write-Host "üìÅ Executando a partir de: $projectRoot" -ForegroundColor Cyan

# Importar fun√ß√£o para criar Secret a partir do .env
. "$PSScriptRoot\create-secret.ps1"

# Verificar se arquivo .env existe (na raiz)
if (-not (Test-Path ".env")) {
    Write-Host "‚ùå Arquivo .env n√£o encontrado na raiz!" -ForegroundColor Red
    Write-Host "üìù Crie o arquivo .env baseado em kubernetes\configs\.env-exemplo" -ForegroundColor Yellow
    exit 1
}

Write-Host "‚úÖ Arquivo .env encontrado na raiz" -ForegroundColor Green

# 1. Criar Secret dinamicamente do .env
Write-Host "üîí Criando Secret a partir do .env..." -ForegroundColor Cyan
if (-not (Create-SecretFromEnv -EnvFile ".env" -SecretName "patocast-secrets")) {
    Write-Host "‚ùå Falha ao criar Secret!" -ForegroundColor Red
    exit 1
}

# 2. Aplicar ConfigMaps (nova estrutura)
Write-Host "2Ô∏è‚É£ Aplicando configura√ß√µes..." -ForegroundColor Cyan
kubectl apply -f kubernetes\manifests\k8s-configmap.yaml

# 3. Criar ConfigMap com scripts SQL
Write-Host "3Ô∏è‚É£ Criando scripts de inicializa√ß√£o do banco..." -ForegroundColor Cyan
kubectl delete configmap postgres-init-scripts --ignore-not-found=true
kubectl create configmap postgres-init-scripts --from-file=./banco_de_dados/

# 4. Deploy PostgreSQL (nova estrutura)
Write-Host "4Ô∏è‚É£ Fazendo deploy do PostgreSQL..." -ForegroundColor Cyan
kubectl apply -f kubernetes\manifests\k8s-postgres.yaml

# Aguardar PostgreSQL
Write-Host "‚è≥ Aguardando PostgreSQL estar pronto..." -ForegroundColor Yellow
kubectl wait --for=condition=ready pod -l app=postgres --timeout=120s

# 5. Deploy Backend (nova estrutura)
Write-Host "5Ô∏è‚É£ Fazendo deploy do Backend..." -ForegroundColor Cyan
kubectl apply -f kubernetes\manifests\k8s-backend.yaml

# Aguardar Backend
Write-Host "‚è≥ Aguardando Backend estar pronto..." -ForegroundColor Yellow
kubectl wait --for=condition=ready pod -l app=patocast-backend --timeout=120s

# 6. Deploy Frontend (nova estrutura)
Write-Host "6Ô∏è‚É£ Fazendo deploy do Frontend..." -ForegroundColor Cyan
kubectl apply -f kubernetes\manifests\k8s-frontend.yaml

# Aguardar Frontend
Write-Host "‚è≥ Aguardando Frontend estar pronto..." -ForegroundColor Yellow
kubectl wait --for=condition=ready pod -l app=patocast-frontend --timeout=120s

# 7. Deploy HPA (nova estrutura)
Write-Host "7Ô∏è‚É£ Configurando Auto-scaling..." -ForegroundColor Cyan
kubectl apply -f kubernetes\manifests\k8s-hpa.yaml

# Status final
Write-Host "üìä STATUS FINAL:" -ForegroundColor Green
Write-Host "=" * 30

kubectl get all

Write-Host ""
Write-Host "üîê SEGURAN√áA IMPLEMENTADA:" -ForegroundColor Green
Write-Host "‚úÖ Credenciais em Secrets (criptografadas)" -ForegroundColor Green
Write-Host "‚úÖ Configura√ß√µes em ConfigMaps" -ForegroundColor Green
Write-Host "‚úÖ Vari√°veis sens√≠veis isoladas" -ForegroundColor Green

Write-Host ""
Write-Host "üåê INICIANDO ACESSO √Ä APLICA√á√ÉO..." -ForegroundColor Cyan
Write-Host "Configurando port-forward para acesso local..." -ForegroundColor Yellow

# Iniciar port-forward em background
Write-Host "üöÄ Iniciando port-forward na porta 3000..." -ForegroundColor Green
Start-Process powershell -ArgumentList "-NoExit", "-Command", "kubectl port-forward service/patocast-frontend-service 3000:3000" -WindowStyle Normal

# Aguardar um pouco para o port-forward inicializar
Start-Sleep -Seconds 3

Write-Host ""
Write-Host "üåê APLICA√á√ÉO DISPON√çVEL:" -ForegroundColor Green
Write-Host "‚úÖ Acesse: http://localhost:3000" -ForegroundColor Yellow
Write-Host "‚úÖ Port-forward rodando em terminal separado" -ForegroundColor Green

Write-Host ""
Write-Host "üß™ TESTE A ROTA PROBLEM√ÅTICA:" -ForegroundColor Cyan
Write-Host "http://localhost:3000/save_conta (POST)" -ForegroundColor Yellow

Write-Host ""
Write-Host "‚ÑπÔ∏è  CONTROLE DO PORT-FORWARD:" -ForegroundColor Blue
Write-Host "Para parar: Feche o terminal do port-forward" -ForegroundColor Yellow
Write-Host "Para reiniciar: kubectl port-forward service/patocast-frontend-service 3000:3000" -ForegroundColor Yellow

Write-Host ""
Write-Host "‚úÖ DEPLOY SEGURO CONCLU√çDO E APLICA√á√ÉO ACESS√çVEL!" -ForegroundColor Green